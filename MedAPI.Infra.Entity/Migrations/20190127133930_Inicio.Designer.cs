// <auto-generated />
using System;
using MedAPI.Infra.Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedAPI.Infra.Entity.Migrations
{
    [DbContext(typeof(MedAPIDBContext))]
    [Migration("20190127133930_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedAPI.Domain.Consulta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int?>("MedicoID");

                    b.Property<int>("PacienteId");

                    b.HasKey("ID");

                    b.HasIndex("MedicoID");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("MedAPI.Domain.Convenio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Inicio");

                    b.Property<string>("Nome");

                    b.Property<int>("PacienteId");

                    b.HasKey("ID");

                    b.HasIndex("PacienteId");

                    b.ToTable("Convenios");
                });

            modelBuilder.Entity("MedAPI.Domain.Endereco", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<string>("Estado");

                    b.Property<int>("Numero");

                    b.Property<int>("PacienteId");

                    b.Property<string>("Pais");

                    b.Property<string>("Rua");

                    b.HasKey("ID");

                    b.HasIndex("PacienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("MedAPI.Domain.Funcionario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<string>("Cargo");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("RG");

                    b.Property<string>("Senha");

                    b.Property<string>("Sobrenome");

                    b.Property<string>("Telefone_Celular");

                    b.Property<string>("Telefone_Residencial");

                    b.Property<string>("User");

                    b.HasKey("ID");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("MedAPI.Domain.Medico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("CPF");

                    b.Property<string>("Email");

                    b.Property<string>("Especialidade");

                    b.Property<string>("Nome");

                    b.Property<string>("RG");

                    b.Property<string>("Senha");

                    b.Property<string>("Sobrenome");

                    b.Property<string>("Telefone_Celular");

                    b.Property<string>("Telefone_Residencial");

                    b.Property<string>("User");

                    b.HasKey("ID");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("MedAPI.Domain.Paciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<string>("Email");

                    b.Property<string>("Foto");

                    b.Property<string>("Nome");

                    b.Property<string>("Nome_Mae");

                    b.Property<string>("Nome_Pai");

                    b.Property<string>("RG");

                    b.Property<string>("Senha");

                    b.Property<string>("Sobrenome");

                    b.Property<string>("Telefone_Celular");

                    b.Property<string>("Telefone_Residencial");

                    b.Property<string>("User");

                    b.HasKey("ID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("MedAPI.Domain.Consulta", b =>
                {
                    b.HasOne("MedAPI.Domain.Medico", "Medico")
                        .WithMany("Consulta")
                        .HasForeignKey("MedicoID");

                    b.HasOne("MedAPI.Domain.Paciente", "Paciente")
                        .WithMany("Consulta")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedAPI.Domain.Convenio", b =>
                {
                    b.HasOne("MedAPI.Domain.Paciente", "Paciente")
                        .WithMany("Convenio")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedAPI.Domain.Endereco", b =>
                {
                    b.HasOne("MedAPI.Domain.Paciente", "Paciente")
                        .WithMany("Endereco")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
